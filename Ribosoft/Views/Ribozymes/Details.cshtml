@model Ribosoft.Models.Ribozyme

@{
    ViewData["Title"] = "Ribozyme Details";
}

<h2 class="my-3">Ribozyme details</h2>

<div class="card my-3 box-shadow">
    <div class="card-body">
        <div class="clearfix border-bottom border-gray pb-2 mb-3">
            <h5 class="float-sm-left card-title">Basic information</h5>
            @if (User.IsInRole("Administrator"))
            {
                <div class="float-sm-right"><a class="btn btn-sm btn-primary" asp-action="Edit" asp-route-id="@Model.Id">Rename <i class="fas fa-edit ml-1"></i></a></div>
            }
        </div>
        
        <dl class="row mb-0">
            <dt class="col-md-2">
                @Html.DisplayNameFor(model => model.Name)
            </dt>
            <dd class="col-md-10">
                @Html.DisplayFor(model => model.Name)
            </dd>
            <dt class="col-md-2">
                @Html.DisplayNameFor(model => model.CreatedAt)
            </dt>
            <dd class="col-md-10">
                @Html.DisplayFor(model => model.CreatedAt)
            </dd>
            <dt class="col-md-2">
                @Html.DisplayNameFor(model => model.UpdatedAt)
            </dt>
            <dd class="col-md-10">
                @Html.DisplayFor(model => model.UpdatedAt)
            </dd>
        </dl>
    </div>
</div>

<div class="card my-3 box-shadow">
    <div class="card-body">
        <div class="clearfix pb-2">
            <h5 class="float-sm-left card-title">Structures</h5>
            @if (User.IsInRole("Administrator"))
            {
                <div class="float-sm-right"><a class="btn btn-sm btn-primary" asp-controller="RibozymeStructures" asp-action="Create" asp-route-ribozymeId="@Model.Id">Add <i class="fas fa-plus-circle ml-1"></i></a></div>
            }
        </div>

        <div class="table-responsive mb-2">
            <table class="table mb-0">
                <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.RibozymeStructures.First().Cutsite)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RibozymeStructures.First().Sequence)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RibozymeStructures.First().SubstrateTemplate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RibozymeStructures.First().PostProcess)
                    </th>
                    <th class="text-right">
                        Actions
                    </th>
                </tr>
                </thead>
                <tbody>
                    @Html.DisplayFor(model => model.RibozymeStructures)
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="clearfix">
    <a class="btn btn-secondary float-md-left" asp-action="Index"><i class="fas fa-arrow-left mr-1"></i> Back to Ribozymes</a>
    @if (User.IsInRole("Administrator"))
    {
        <a asp-controller="Ribozymes" asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger float-md-right">Delete <i class="fas fa-trash ml-1"></i></a>
    }
</div>

<div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="ribozymeModal" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Visualization</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div>
                    <h6>Legend</h6>
                    <table>
                        <tbody>
                            <tr>
                                <td>
                                    <span class="dot dot-orange" />
                                </td>
                                <td>
                                    Ribozyme nucleotide
                                </td>
                                <td>
                                    <span class="line line-red" />
                                </td>
                                <td>
                                    Basepair
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <span class="dot dot-white" />
                                </td>
                                <td>
                                    Substrate nucleotide
                                </td>
                                <td>
                                    <span class="line line-blue" />
                                </td>
                                <td>
                                    Pseudoknot
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <span class="dot dot-red" />
                                </td>
                                <td>
                                    Cutsite
                                </td>
                                <td>
                                    <span class="line line-grey" />
                                </td>
                                <td>
                                    Backbone
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <hr/>
                <div id="ribContainer"></div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        $('button[id^="rna_ss"]').click(function () {
            var container = new fornac.FornaContainer('#ribContainer', { 'applyForce': true, 'allowPanningAndZooming': false, 'labelInterval': 0 });
            var options = {
                'structure': this.getAttribute('structure').replaceAll(/[a-z0-9]/ig, '(') + '&' + this.getAttribute('substructure').replaceAll(/[a-z0-9]/ig, ')'),
                'sequence': this.getAttribute('sequence') + '&' + this.getAttribute('subsequence')
            };
            container.addRNA(options.structure, options);

            var seqLen = this.getAttribute('sequence').length;
            var subLen = this.getAttribute('subsequence').length;
            var cutsite = parseInt(this.getAttribute('cutsite')) + this.getAttribute('subsequence').match(/[A-Z]/).index;

            for (var idx = 1; idx <= Math.max(seqLen, subLen); idx++) {
                if (idx <= Math.min(seqLen, subLen)) {
                    $('circle[node_num="' + idx + '"]').get(0).style.fill = 'orange';
                    $('circle[node_num="' + idx + '"]').get(1).style.fill = 'white';
                } else {
                    $('circle[node_num="' + idx + '"]').get(0).style.fill = seqLen > subLen ? 'orange' : 'white';
                }

                if (idx == cutsite || idx == cutsite + 1) {
                    $('circle[node_num="' + idx + '"]').get(seqLen > subLen ? 1 : 0).style.fill = 'red';
                }
            }
        });
    </script>
}
