@model Ribosoft.Models.JobsViewModels.JobIndexViewModel
@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "Jobs";
}

<div class="row my-3">
    <h1 class="col-md-6">@ViewData["Title"]</h1>
    <div class="col-md-6 align-content-center d-flex">
        <form method="post" class="form-inline ml-auto">
            <span class="text-danger mr-1">@Model.ErrorMessage</span>
            <span class="text-success mr-1">@Model.SuccessMessage</span>
            <span data-toggle="tooltip" data-placement="left" title="@Localizer["AddJobTooltip"]"><i class="fas fa-question-circle text-info"></i></span>
            <input asp-for="JobId" class="form-control mx-1" placeholder="Job Id">
            <button type="submit" class="btn btn-primary">Add</button>
        </form>
    </div>
</div>

@if (Model.InProgress.Any())
{
    <div class="card my-3 box-shadow">
        <div class="card-body">
            <h5 class="card-title mb-0">In progress</h5>
        </div>

        <div class="list-group list-group-flush">
            @foreach (var item in Model.InProgress)
            {
                <div class="list-group-item">
                    <div class="row my-1">
                        <div class="col-md-8">
                            <p class="mb-0">
                                <span class="d-block">
                                    <strong>@Html.DisplayFor(modelItem => item.Ribozyme.Name)</strong> <span class="text-muted">on @item.CreatedAt</span> <span class="text-muted">[@Html.DisplayNameFor(modelItem => item.Id): @item.Id]</span>
                                </span>
                                <code>@(item.RNAInput.Length > 80 ? item.RNAInput.Substring(0, 80) + "..." : item.RNAInput)</code>
                            </p>
                        </div>
                        <div class="col-md-4 text-md-right">
                            <a role="button" class="btn btn-primary" asp-action="Details" asp-route-id="@item.Id">Details</a>
                            <a role="button" class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id">Cancel</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

<div class="card my-3 box-shadow">
    @if (Model.Completed.TotalItems == 0)
    {
        <div class="card-body">
            <div class="row my-1">
                <div class="col-md-6">
                    <h5 class="card-title mb-0">Completed</h5>
                </div>
            </div>
            <p class="card-text">You have no completed jobs.</p>
        </div>
    }
    else
    {
        <div class="card-body">
            <div class="row my-1">
                <div class="col-md-6">
                    <h5 class="card-title mb-0">Completed</h5>
                </div>
            </div>
        </div>

        <div class="list-group list-group-flush">
            @foreach (var item in Model.Completed.Data)
            {
                <div class="list-group-item">
                    <div class="row my-1">
                        <div class="col-md-8">
                            <p class="mb-0">
                                <span class="d-block">
                                    @Html.Partial("JobStateBadge", item.JobState)
                                    <strong>@Html.DisplayFor(modelItem => item.Ribozyme.Name)</strong> <span class="text-muted">on @item.CreatedAt</span> <span class="text-muted">[@Html.DisplayNameFor(modelItem => item.Id): @item.Id]</span>
                                </span>
                                <code>@(item.RNAInput.Length > 80 ? item.RNAInput.Substring(0, 80) + "..." : item.RNAInput)</code>
                            </p>
                        </div>
                        <div class="col-md-4 text-md-right">
                            <a role="button" class="btn btn-primary" asp-action="Details" asp-route-id="@item.Id">Details</a>
                            <a role="button" class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="card-body">
            <cs-pager cs-paging-pagesize="@Model.Completed.PageSize"
                      cs-paging-pagenumber="@Model.Completed.PageNumber"
                      cs-paging-totalitems="@Model.Completed.TotalItems"
                      asp-action="Index"
                      asp-controller="Jobs"
                      cs-pagenumber-param="pageNumber"
                      cs-pager-ul-class="pagination mb-0"
                      cs-pager-li-current-class="page-item active"
                      cs-pager-li-other-class="page-item"
                      cs-pager-li-non-active-class="page-item disabled"
                      cs-pager-link-current-class="page-link"
                      cs-pager-link-other-class="page-link"></cs-pager>
        </div>
    }
</div>

@section scripts 
{
    <script>
        $(function() {
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
}