version: '3.8'

volumes:
  pgdata:
    driver: local
  ribosoft_logs:
    driver: local

networks:
  ribosoft_network:
    driver: bridge

services:
  db:
    image: postgres:16-alpine
    container_name: ribosoft_db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ribosoft
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - ribosoft_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ribosoft"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
      - /var/run/postgresql

  ribosoft:
    image: ghcr.io/t-vaudry/ribosoft:latest
    container_name: ribosoft_app
    restart: unless-stopped
    ports:
      - "5001:80"
    build:
      context: .
      dockerfile: Ribosoft/Dockerfile
      target: runtime
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings__NpgsqlConnection: "Host=db;Port=5432;Username=postgres;Password=postgres;Database=ribosoft;Pooling=true;Timeout=30;Command Timeout=30;"
      DB_CONTEXT: NpgsqlDbContext
      EntityFrameworkProvider: Npgsql
      NODE_ENV: production
      ASPNETCORE_LOGGING__LOGLEVEL__DEFAULT: Information
      ASPNETCORE_LOGGING__LOGLEVEL__MICROSOFT: Warning
    volumes:
      - ribosoft_logs:/app/logs
    networks:
      - ribosoft_network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
