<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.2 (Python 3.13.5 on linux)" generated="2025-07-06T01:30:28.975759" rpa="false" schemaversion="5">
<suite id="s1" name="Startup" source="/home/thomas/git/ribosoft/test/tests/startup.robot">
<test id="s1-t1" name="Startup" line="17">
<kw name="Start Ribosoft" owner="install" type="SETUP">
<kw name="Check Docker Availability" owner="install">
<kw name="Run Process" owner="Process">
<msg time="2025-07-06T01:30:29.189881" level="INFO">Starting process:
docker --version</msg>
<msg time="2025-07-06T01:30:29.190332" level="INFO">Waiting for process to complete.</msg>
<msg time="2025-07-06T01:30:29.213134" level="INFO">Process completed.</msg>
<msg time="2025-07-06T01:30:29.213304" level="INFO">${result} = &lt;result object with rc 1&gt;</msg>
<var>${result}</var>
<arg>docker</arg>
<arg>--version</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="PASS" start="2025-07-06T01:30:29.189700" elapsed="0.023633"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-07-06T01:30:29.214229" level="INFO">${docker_available} = False</msg>
<var>${docker_available}</var>
<arg>${result.rc} == 0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-07-06T01:30:29.213514" elapsed="0.000780"/>
</kw>
<if>
<branch type="IF" condition="${docker_available}">
<kw name="Run Process" owner="Process">
<var>${result}</var>
<arg>docker</arg>
<arg>compose</arg>
<arg>version</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.214685" elapsed="0.000026"/>
</kw>
<if>
<branch type="IF" condition="${result.rc} != 0">
<kw name="Run Process" owner="Process">
<var>${result}</var>
<arg>docker-compose</arg>
<arg>--version</arg>
<arg>shell=True</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.214907" elapsed="0.000027"/>
</kw>
<status status="NOT RUN" start="2025-07-06T01:30:29.214808" elapsed="0.000162"/>
</branch>
<status status="NOT RUN" start="2025-07-06T01:30:29.214789" elapsed="0.000216"/>
</if>
<kw name="Evaluate" owner="BuiltIn">
<var>${compose_available}</var>
<arg>${result.rc} == 0</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.215073" elapsed="0.000022"/>
</kw>
<kw name="Set Global Variable" owner="BuiltIn">
<arg>${DOCKER_AVAILABLE}</arg>
<arg>${compose_available}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.215175" elapsed="0.000021"/>
</kw>
<status status="NOT RUN" start="2025-07-06T01:30:29.214493" elapsed="0.000733"/>
</branch>
<branch type="ELSE">
<kw name="Set Global Variable" owner="BuiltIn">
<msg time="2025-07-06T01:30:29.215520" level="INFO">${DOCKER_AVAILABLE} = False</msg>
<arg>${DOCKER_AVAILABLE}</arg>
<arg>${False}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="PASS" start="2025-07-06T01:30:29.215343" elapsed="0.000215"/>
</kw>
<status status="PASS" start="2025-07-06T01:30:29.215266" elapsed="0.000329"/>
</branch>
<status status="PASS" start="2025-07-06T01:30:29.214456" elapsed="0.001171"/>
</if>
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-06T01:30:29.215805" level="INFO">Docker available: False</msg>
<arg>Docker available: ${DOCKER_AVAILABLE}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-06T01:30:29.215696" elapsed="0.000147"/>
</kw>
<return>
<value>${DOCKER_AVAILABLE}</value>
<status status="PASS" start="2025-07-06T01:30:29.215890" elapsed="0.000089"/>
</return>
<msg time="2025-07-06T01:30:29.216112" level="INFO">${docker_available} = False</msg>
<var>${docker_available}</var>
<doc>Check if Docker and Docker Compose are available</doc>
<status status="PASS" start="2025-07-06T01:30:29.189179" elapsed="0.026955"/>
</kw>
<if>
<branch type="IF" condition="${docker_available}">
<kw name="Log" owner="BuiltIn">
<arg>Starting Ribosoft with Docker Compose</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.216312" elapsed="0.000025"/>
</kw>
<kw name="Run Process" owner="Process">
<var>${result}</var>
<arg>docker</arg>
<arg>compose</arg>
<arg>-f</arg>
<arg>tests/docker-compose.yml</arg>
<arg>up</arg>
<arg>-d</arg>
<arg>shell=True</arg>
<arg>cwd=/home/thomas/git/ribosoft/test/resources/..</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.216624" elapsed="0.000027"/>
</kw>
<if>
<branch type="IF" condition="${result.rc} != 0">
<kw name="Run Process" owner="Process">
<var>${result}</var>
<arg>docker-compose</arg>
<arg>-f</arg>
<arg>tests/docker-compose.yml</arg>
<arg>up</arg>
<arg>-d</arg>
<arg>shell=True</arg>
<arg>cwd=/home/thomas/git/ribosoft/test/resources/..</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.216815" elapsed="0.000025"/>
</kw>
<status status="NOT RUN" start="2025-07-06T01:30:29.216719" elapsed="0.000161"/>
</branch>
<status status="NOT RUN" start="2025-07-06T01:30:29.216706" elapsed="0.000206"/>
</if>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<arg>${result.rc}</arg>
<arg>0</arg>
<arg>Docker Compose failed to start</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.216972" elapsed="0.000022"/>
</kw>
<kw name="Sleep" owner="BuiltIn">
<arg>30s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.217062" elapsed="0.000020"/>
</kw>
<status status="NOT RUN" start="2025-07-06T01:30:29.216198" elapsed="0.000911"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-06T01:30:29.217282" level="INFO">Docker not available - using mock startup for testing</msg>
<arg>Docker not available - using mock startup for testing</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-06T01:30:29.217201" elapsed="0.000120"/>
</kw>
<kw name="Pass Execution" owner="BuiltIn">
<msg time="2025-07-06T01:30:29.217471" level="INFO">Execution passed with message:
Docker not available - skipping integration test</msg>
<arg>Docker not available - skipping integration test</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2025-07-06T01:30:29.217398" elapsed="0.000130">Docker not available - skipping integration test</status>
</kw>
<status status="PASS" start="2025-07-06T01:30:29.217135" elapsed="0.000432">Docker not available - skipping integration test</status>
</branch>
<status status="PASS" start="2025-07-06T01:30:29.216183" elapsed="0.001415">Docker not available - skipping integration test</status>
</if>
<doc>Start Ribosoft service (Docker or mock)</doc>
<status status="PASS" start="2025-07-06T01:30:29.188863" elapsed="0.028786">Docker not available - skipping integration test</status>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-07-06T01:30:29.218146" level="INFO">Creating Session using : alias=ribosoft, url=http://localhost:5001, headers={},                     cookies={}, auth=None, timeout=5, proxies=None, verify=False,                     debug=0 </msg>
<arg>ribosoft</arg>
<arg>${URL}</arg>
<arg>timeout=5</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-07-06T01:30:29.217897" elapsed="0.000439"/>
</kw>
<msg time="2025-07-06T01:30:29.218437" level="INFO">${status} = PASS</msg>
<msg time="2025-07-06T01:30:29.218480" level="INFO">${response} = &lt;requests.sessions.Session object at 0x7faa740eb380&gt;</msg>
<var>${status}</var>
<var>${response}</var>
<arg>Create Session</arg>
<arg>ribosoft</arg>
<arg>${URL}</arg>
<arg>timeout=5</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2025-07-06T01:30:29.217775" elapsed="0.000725"/>
</kw>
<if>
<branch type="IF" condition="&quot;${status}&quot; == &quot;PASS&quot;">
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2025-07-06T01:30:29.223905" level="WARN">Retrying (RetryAdapter(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7faa740eb230&gt;: Failed to establish a new connection: [Errno 111] Connection refused')': /</msg>
<msg time="2025-07-06T01:30:29.424908" level="WARN">Retrying (RetryAdapter(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7faa73f98cd0&gt;: Failed to establish a new connection: [Errno 111] Connection refused')': /</msg>
<msg time="2025-07-06T01:30:29.826829" level="WARN">Retrying (RetryAdapter(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7faa73f99bd0&gt;: Failed to establish a new connection: [Errno 111] Connection refused')': /</msg>
<msg time="2025-07-06T01:30:29.827483" level="FAIL">ConnectionError: HTTPConnectionPool(host='localhost', port=5001): Max retries exceeded with url: / (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7faa74181350&gt;: Failed to establish a new connection: [Errno 111] Connection refused'))</msg>
<arg>ribosoft</arg>
<arg>/</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2025-07-06T01:30:29.218977" elapsed="0.614263">ConnectionError: HTTPConnectionPool(host='localhost', port=5001): Max retries exceeded with url: / (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7faa74181350&gt;: Failed to establish a new connection: [Errno 111] Connection refused'))</status>
</kw>
<msg time="2025-07-06T01:30:29.833445" level="INFO">${status} = FAIL</msg>
<msg time="2025-07-06T01:30:29.833493" level="INFO">${response} = ConnectionError: HTTPConnectionPool(host='localhost', port=5001): Max retries exceeded with url: / (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7faa74181350&gt;: Failed t...</msg>
<var>${status}</var>
<var>${response}</var>
<arg>GET On Session</arg>
<arg>ribosoft</arg>
<arg>/</arg>
<arg>expected_status=200</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2025-07-06T01:30:29.218861" elapsed="0.614655"/>
</kw>
<if>
<branch type="IF" condition="&quot;${status}&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Service is responding, testing with browser</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.833875" elapsed="0.000030"/>
</kw>
<kw name="Open Browser" owner="SeleniumLibrary">
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.834019" elapsed="0.000026"/>
</kw>
<kw name="Wait Until Page Contains" owner="SeleniumLibrary">
<arg>Ribosoft</arg>
<arg>timeout=10s</arg>
<doc>Waits until ``text`` appears on the current page.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.834127" elapsed="0.000025"/>
</kw>
<kw name="Title Should Be" owner="SeleniumLibrary">
<arg>${TITLE}</arg>
<doc>Verifies that the current page title equals ``title``.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.834279" elapsed="0.000028"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.834386" elapsed="0.000022"/>
</kw>
<status status="NOT RUN" start="2025-07-06T01:30:29.833631" elapsed="0.000804"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-06T01:30:29.834709" level="INFO">Service not responding properly: ConnectionError: HTTPConnectionPool(host='localhost', port=5001): Max retries exceeded with url: / (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7faa74181350&gt;: Failed to establish a new connection: [Errno 111] Connection refused'))</msg>
<arg>Service not responding properly: ${response}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-06T01:30:29.834549" elapsed="0.000208"/>
</kw>
<kw name="Pass Execution" owner="BuiltIn">
<msg time="2025-07-06T01:30:29.834918" level="INFO">Execution passed with message:
Service not available - this may be expected in environments without Docker</msg>
<arg>Service not available - this may be expected in environments without Docker</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2025-07-06T01:30:29.834844" elapsed="0.000129">Service not available - this may be expected in environments without Docker</status>
</kw>
<status status="PASS" start="2025-07-06T01:30:29.834473" elapsed="0.000541">Service not available - this may be expected in environments without Docker</status>
</branch>
<status status="PASS" start="2025-07-06T01:30:29.833604" elapsed="0.001444">Service not available - this may be expected in environments without Docker</status>
</if>
<status status="PASS" start="2025-07-06T01:30:29.218663" elapsed="0.616412">Service not available - this may be expected in environments without Docker</status>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<arg>Cannot connect to service at ${URL}: ${response}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.835196" elapsed="0.000024"/>
</kw>
<kw name="Pass Execution" owner="BuiltIn">
<arg>Service not available - this may be expected in environments without Docker</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.835295" elapsed="0.000023"/>
</kw>
<status status="NOT RUN" start="2025-07-06T01:30:29.835113" elapsed="0.000236"/>
</branch>
<status status="PASS" start="2025-07-06T01:30:29.218645" elapsed="0.616737">Service not available - this may be expected in environments without Docker</status>
</if>
<kw name="Stop Ribosoft" owner="install" type="TEARDOWN">
<if>
<branch type="IF" condition="${DOCKER_AVAILABLE}">
<kw name="Log" owner="BuiltIn">
<arg>Stopping Ribosoft with Docker Compose</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.836066" elapsed="0.000028"/>
</kw>
<kw name="Run Process" owner="Process">
<var>${result}</var>
<arg>docker</arg>
<arg>compose</arg>
<arg>-f</arg>
<arg>tests/docker-compose.yml</arg>
<arg>down</arg>
<arg>shell=True</arg>
<arg>cwd=/home/thomas/git/ribosoft/test/resources/..</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.836180" elapsed="0.000024"/>
</kw>
<if>
<branch type="IF" condition="${result.rc} != 0">
<kw name="Run Process" owner="Process">
<var>${result}</var>
<arg>docker-compose</arg>
<arg>-f</arg>
<arg>tests/docker-compose.yml</arg>
<arg>down</arg>
<arg>shell=True</arg>
<arg>cwd=/home/thomas/git/ribosoft/test/resources/..</arg>
<doc>Runs a process and waits for it to complete.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.836355" elapsed="0.000022"/>
</kw>
<status status="NOT RUN" start="2025-07-06T01:30:29.836278" elapsed="0.000140"/>
</branch>
<status status="NOT RUN" start="2025-07-06T01:30:29.836262" elapsed="0.000185"/>
</if>
<kw name="Log" owner="BuiltIn">
<arg>Docker Compose teardown completed with exit code: ${result.rc}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2025-07-06T01:30:29.836509" elapsed="0.000023"/>
</kw>
<status status="NOT RUN" start="2025-07-06T01:30:29.835912" elapsed="0.000650"/>
</branch>
<branch type="ELSE">
<kw name="Log" owner="BuiltIn">
<msg time="2025-07-06T01:30:29.836820" level="INFO">Docker not available - skipping teardown</msg>
<arg>Docker not available - skipping teardown</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2025-07-06T01:30:29.836736" elapsed="0.000124"/>
</kw>
<status status="PASS" start="2025-07-06T01:30:29.836633" elapsed="0.000264"/>
</branch>
<status status="PASS" start="2025-07-06T01:30:29.835896" elapsed="0.001030"/>
</if>
<doc>Stop Ribosoft service (Docker or mock)</doc>
<status status="PASS" start="2025-07-06T01:30:29.835723" elapsed="0.001243"/>
</kw>
<doc>Test that Ribosoft starts up and serves the home page</doc>
<tag>integration</tag>
<tag>startup</tag>
<status status="PASS" start="2025-07-06T01:30:29.188160" elapsed="0.648847">Service not available - this may be expected in environments without Docker</status>
</test>
<doc>Test startup functionality</doc>
<status status="PASS" start="2025-07-06T01:30:28.976473" elapsed="0.860918"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">integration</stat>
<stat pass="1" fail="0" skip="0">startup</stat>
</tag>
<suite>
<stat name="Startup" id="s1" pass="1" fail="0" skip="0">Startup</stat>
</suite>
</statistics>
<errors>
<msg time="2025-07-06T01:30:29.223905" level="WARN">Retrying (RetryAdapter(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7faa740eb230&gt;: Failed to establish a new connection: [Errno 111] Connection refused')': /</msg>
<msg time="2025-07-06T01:30:29.424908" level="WARN">Retrying (RetryAdapter(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7faa73f98cd0&gt;: Failed to establish a new connection: [Errno 111] Connection refused')': /</msg>
<msg time="2025-07-06T01:30:29.826829" level="WARN">Retrying (RetryAdapter(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7faa73f99bd0&gt;: Failed to establish a new connection: [Errno 111] Connection refused')': /</msg>
</errors>
</robot>
