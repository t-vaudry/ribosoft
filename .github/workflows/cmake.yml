name: RibosoftAlgo CMake Builds

on: [push, workflow_dispatch]

env:
  BUILD_TYPE: Release

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
        architecture: x64

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Install pipenv
      run: |
        pip install pipenv
        pipenv install

    - name: Get library dependencies
      run: pipenv run python $GITHUB_WORKSPACE/ribosoft.py deps install --yes

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE/RibosoftAlgo -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: ctest -C $BUILD_TYPE --output-on-failure

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
        architecture: x64

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/ribosoft/RibosoftAlgo/build

    - name: Install pipenv
      run: |
        pip install pipenv
        pipenv install

    - name: Get library dependencies
      run: pipenv run python ./ribosoft.py deps install --yes

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/ribosoft/RibosoftAlgo/build
      run: cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      shell: bash
      working-directory: ${{runner.workspace}}/ribosoft/RibosoftAlgo/build
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      shell: bash
      working-directory: ${{runner.workspace}}/ribosoft/RibosoftAlgo/build
      run: ctest -C $BUILD_TYPE --output-on-failure

  build-macos:
    runs-on: macOS-latest
    if:
      contains('
        refs/heads/master
        refs/heads/develop
      ', github.ref)
    steps:
    - uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
        architecture: x64
    - name: Install Mono
      uses: maxim-lobanov/setup-xamarin@v1
      with:
        mono-version: latest
    - name: Install gcc & libomp
      shell: bash
      run: brew install gcc@10 libomp

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Install pipenv
      run: |
        pip install pipenv
        pipenv install

    - name: Get library dependencies
      run: pipenv run python $GITHUB_WORKSPACE/ribosoft.py deps install --yes

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: CC=gcc-10 CXX=g++-10 cmake $GITHUB_WORKSPACE/RibosoftAlgo -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: ctest -C $BUILD_TYPE --output-on-failure
