name: RibosoftAlgo CMake Builds

on: [push, workflow_dispatch]

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            cc: gcc-13
            cxx: g++-13
          - os: windows-latest
            cc: cl
            cxx: cl
          - os: macos-latest
            cc: clang
            cxx: clang++
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pipenv'

    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: '3.28'

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-13 g++-13 libomp-dev

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install libomp
        # Use Xcode's clang which supports OpenMP with libomp

    - name: Setup MSVC (Windows)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --dev

    - name: Get library dependencies
      run: pipenv run python ribosoft.py deps install --yes

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/RibosoftAlgo/build

    - name: Configure CMake (Unix)
      if: matrix.os != 'windows-latest'
      shell: bash
      working-directory: ${{github.workspace}}/RibosoftAlgo/build
      run: |
        CC=${{ matrix.cc }} CXX=${{ matrix.cxx }} cmake .. \
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Configure CMake (Windows)
      if: matrix.os == 'windows-latest'
      shell: bash
      working-directory: ${{github.workspace}}/RibosoftAlgo/build
      run: |
        cmake .. \
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      shell: bash
      working-directory: ${{github.workspace}}/RibosoftAlgo/build
      run: cmake --build . --config $BUILD_TYPE --parallel

    - name: Test
      shell: bash
      working-directory: ${{github.workspace}}/RibosoftAlgo/build
      run: ctest -C $BUILD_TYPE --output-on-failure --parallel

    - name: Upload test results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}
        path: ${{github.workspace}}/RibosoftAlgo/build/Testing/
